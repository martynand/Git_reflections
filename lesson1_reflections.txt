How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    	It was very easy and fast. I avoided tidious research through lines of text.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

        I can observe the progress of the project creation and learn through the mistakes that were introduced. I can split up work into pieces and think about work in terms of bunch of steps and to be able to fix all the mistakes by moving forward and backward. I can also easily retrive older version of code if I find the bug in the newer version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

        Pros:
        In Git I can have more control over commit creation where as in Google docs I do not. Also when I do commits per logical change it is easy to go through project creation history and understand the steps.
        Cons:
        In Git it can be possible to forget to make the commit.     


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

How can you use the commands git log and git diff to view the history of files?

How might using version control make you more confident to make changes that
could break something?

Now that you have your workspace set up, what do you want to try using Git for?
