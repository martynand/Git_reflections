When would you want to use a remote repository rather than keeping all your work local?

    I would want to use a remote repository rather than keeping all work local when - for example - I collaborate with other people. When we work on some project together and it is much easier to access the code online. Or if I simply want to publish my project publicly. Other example can be when I work from different computers as well as a way to back up my code.
    
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I want to always pull changes manually because like this I have control over my code and I can decide if I want to pull changes to my local repository or not yet. For example if some code introduces the bug I might not want to pull that change until the problem is fixed.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks, clones and branches all allow me to 'copy' and add changes but without modifying the original version. Branches are created in the repository. Clone makes a copy of any repository to a new location. Fork works similar to clone because it copies the entire repository but it works only on GitHub machines so I can only copy GitHub repository to another location on GitHub.
    
    I would use branch to work on a new feature or bug testing. I would use clone to copy the existing repository from GitHub to work on it locally. I would fork the repository on GitHub to make some changes to it on my account but without being able to change the original version.
    
What is the benefit of having a copy of the last known state of the remote
stored locally?

   The benefit of having a copy of the last known state of the remote stored locally is that I can update my local copy and then I can work on my own branch without merging new changes if I am not ready for that yet, for example if I am going to be offline for a while.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    I think it could be quite hard to collaborate without Git or GitHub as they are targeted for programming purposes. Other way to work together on the project would be to use the same directory or maybe divided in categories for each person working on the project. It could be done online on some shared platform. Hovewer I do not think that this could be efficient enough as changing the same file for example without possibility to clearly see differences could make it very difficult to work and introduce a lot of bugs. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    When working in a separate branch you are kind of just testing new feature before merging it into original version. This can be very useful when working in a team and you want to make sure that all changes can be approved and all works well together with master.
